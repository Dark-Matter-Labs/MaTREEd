{"version":3,"sources":["static/legends.js","Viewer.js","Simulator.js","App.js","index.js"],"names":["legends","tree_tot_n","label","colorMap","avg_trunk_girth","avg_height","avg_crown_diameter","tree_cover","sum_c_stock","sum_c_stock_n","madridCenter","Tooltip","closeTooltip","style","properties","perc_caducifolio","perc_perennifolio","tree_valid","tree_tot","especie_1","especie_1_perc","especie_2","especie_2_perc","especie_3","especie_3_perc","other_perc","sum_c_seq","NOMBRE","CODBARRIO","treeData","treeSpecies","carbonInfo","Math","round","className","map","name","val","onClick","Legend","legendValue","setLegendValue","legendItem","item","index","backgroundColor","Object","entries","getColorForLegend","colorItem","find","length","App","useState","tooltipVisible","setTooltipVisible","setProperties","layerH","setLayerH","left","id","to","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","GeoJSON","feature","fillColor","weight","opacity","color","dashArray","fillOpacity","onEachFeature","layer","eventHandlers","click","e","a","console","log","data","pathOptions","Simulator","URLSearchParams","useLocation","search","get","currentJSON","setCurrentJSON","currentJSONRef","useRef","mapRef","useEffect","fileName","fetch","then","res","json","current","bounds","getBounds","fitBounds","MapConsumer","ref","basename","exact","path","component","Viewer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d0e2efa.chunk.js","sourcesContent":["const legends = {\n    tree_tot_n: {\n      label: \"Trees density [trees/Km2]\",\n      colorMap:[\n         [24011, '#00441b'],\n         [7156, '#2a924a'],\n         [4656, '#7bc87c'],\n         [3188, '#caeac3'],\n         [2161, '#f7fcf5'],\n      ]\n    },\n    avg_trunk_girth: {\n      label: \"Mean trees trunk girth [m]\",\n      colorMap:[\n        [0.943, '#a6611a'],\n        [0.751, '#dfc27d'],\n        [0.677, '#f5f5f5'],\n        [0.625, '#80cdc1'],\n        [0.55, '#018571'],\n      ]\n    },\n    avg_height: {\n      label: \"Mean trees height [m]\",\n      colorMap:[\n        [11.6, '#bd0026'],\n        [9.18, '#f03b20'],\n        [8.41, '#fd8d3c'],\n        [7.71, '#fecc5c'],\n        [6.93, '#ffffb2'],\n      ]\n    },\n    avg_crown_diameter: {\n      label: \"Mean trees canopy diameter [m]\",\n      colorMap:[\n        [7.26, '#810f7c'],\n        [5.61, '#8856a7'],\n        [5.19, '#8c96c6'],\n        [4.7,  '#b3cde3'],\n        [4.02, '#edf8fb'],\n      ]\n    },\n    tree_cover: {\n      label: \"Trees canopy coverage [area %]\",\n      colorMap:[\n        [23.4, '#006837'],\n        [11.8, '#31a354'],\n        [8.7, '#78c679'],\n        [5.8, '#c2e699'],\n        [2.8, '#ffffcc'],\n      ]\n    },\n    sum_c_stock: {\n      label: \"CO₂ stock [Kg/Km2]\",\n      colorMap: [\n        [243345, '#440154'],\n        [51895, '#3a528b'],\n        [32218, '#20908d'],\n        [20265, '#5dc962'],\n        [9425, '#fde725'],\n      ],\n    },\n    sum_c_stock_n: {\n      label: \"CO₂ sequestration [Kg/y/Km2]\",\n      colorMap: [\n        [38781, '#d7191c'],\n        [8479, '#fdae61'],\n        [5263, '#ffffbf'],\n        [3324, '#abdda4'],\n        [1618, '#2b83ba'],\n      ],\n    },\n  };\n\n  export default legends;","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { MapContainer, TileLayer, GeoJSON } from \"react-leaflet\";\nimport data from \"./app_data/neighborhoods_madrid_stats.json\";\nimport { Link } from \"react-router-dom\";\nimport legends from \"./static/legends\";\n\nconst madridCenter = [40.475, -3.7];\n\nconst Tooltip = ({ closeTooltip, style, properties }) => {\n  if (!properties) {\n    return null;\n  }\n  const {\n    perc_caducifolio,\n    perc_perennifolio,\n    tree_valid,\n    tree_tot,\n    especie_1,\n    especie_1_perc,\n    especie_2,\n    especie_2_perc,\n    especie_3,\n    especie_3_perc,\n    other_perc,\n    sum_c_stock,\n    sum_c_seq,\n    CODBARRIO,\n    NOMBRE,\n  } = properties;\n\n  const treeData = [\n    [\"TREES COUNT\", tree_tot],\n    [\"VALID TREE RECORDS\", tree_valid + \"%\"],\n    [\"EVERGREEN\", perc_perennifolio + \"%\"],\n    [\"DECIDUOUS\", perc_caducifolio + \"%\"],\n  ];\n\n  const treeSpecies = [\n    [especie_1, especie_1_perc],\n    [especie_2, especie_2_perc],\n    [especie_3, especie_3_perc],\n    [\"others\", other_perc],\n  ];\n\n  const carbonInfo = [\n    [\"CO₂ stock \", Math.round(sum_c_stock * 100) / 100 + \" Kg\"],\n    [\"CO₂ sequestration\", Math.round(sum_c_seq * 100) / 100 + \" Kg/y\"],\n  ];\n  return (\n    <div style={style} className=\"tooltip\">\n      <div className=\"singleRow\">\n        <p>{NOMBRE}</p>\n      </div>\n      {treeData.map(([name, val]) => (\n        <div className=\"row\">\n          <p>{name}</p>\n          <p>{val}</p>\n        </div>\n      ))}\n      <div className=\"singleRow\">\n        <p>TREE SPECIES</p>\n      </div>\n      {treeSpecies.map(([name, val]) => (\n        <div className=\"row\">\n          <p>{name}</p>\n          <p>{val}%</p>\n        </div>\n      ))}\n      <div className=\"singleRow\">\n        <p>CO₂ PERFORMANCE</p>\n      </div>\n      {carbonInfo.map(([name, val]) => (\n        <div className=\"row\">\n          <p>{name}</p>\n          <p>{val}</p>\n        </div>\n      ))}\n      {/* <Link to={`/simulator?id=${CODBARRIO}`}>\n      <button className='blueButton goToSimulator'>View in Simulator</button>\n    </Link> */}\n      <button className=\"blueButton closeButton\" onClick={closeTooltip}>\n        Close\n      </button>\n    </div>\n  );\n};\n\nconst Legend = ({ legendValue, setLegendValue }) => {\n  const legendItem = legends?.[legendValue]?.label;\n  const colorMap = legends?.[legendValue]?.colorMap;\n\n  return (\n    <div className=\"legendContainer\">\n      <div>\n        <h2>MAPS</h2>\n      </div>\n      <div className=\"legendTitle\">{legendItem}</div>\n      {colorMap?.map((item, index) =>(\n        <p>\n          <div className=\"legendVal\">\n            {`${colorMap[index][0]}-${colorMap[index + 1]?.[0] || 0}`}\n          </div>\n          <div className=\"legendColor\" style={{ backgroundColor: item[1]||item[0] }} />\n        </p>\n      ))}\n      {Object.entries(legends).map(\n        (item) =>\n          item[0] !== legendValue && (\n            <div\n              className=\"legendTitle otherLegend\"\n              onClick={() => setLegendValue(item[0])}\n            >\n              {item[1].label}\n            </div>\n          )\n      )}\n    </div>\n  );\n};\n\nfunction getColorForLegend(val, colorMap) {\n  if (!colorMap) {\n    return;\n  }\n\n  const colorItem = colorMap.find((item) => val > item[0]);\n  \n  return (colorItem && colorItem[1]) ? colorItem[1] : colorMap[colorMap.length - 1][1];\n}\n\nconst App = () => {\n  const [legendValue, setLegendValue] = useState(\"sum_c_stock\");\n  const [tooltipVisible, setTooltipVisible] = useState(false);\n  const [properties, setProperties] = useState(null);\n  const [layerH, setLayerH] = useState(null);\n  const left = tooltipVisible ? \"0px\" : \"-100%\";\n\n  const getStyle = (val, colorMap) =>\n    ({\n      fillColor: getColorForLegend(val, colorMap),\n      weight: 2,\n      opacity: 1,\n      color: \"white\",\n      dashArray: \"3\",\n      fillOpacity: 0.7,\n    });\n\n  return (\n    <div id=\"container\">\n      <div className=\"pageName\">\n        MaTREEd Viewer\n        <Link to=\"/simulator\">\n          <button className=\"blueButton linkButton\">Go to Simulator</button>\n        </Link>\n      </div>\n      <Legend legendValue={legendValue} setLegendValue={setLegendValue} />\n      <Tooltip\n        properties={properties}\n        style={{ left: left }}\n        closeTooltip={() => setTooltipVisible(false)}\n      />\n\n      <MapContainer\n        id=\"mapContainer\"\n        center={madridCenter}\n        zoom={11}\n        scrollWheelZoom={false}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <GeoJSON\n          style={(feature) =>\n            getStyle(\n              feature.properties[legendValue],\n              legends?.[legendValue]?.colorMap\n            )\n          }\n          onEachFeature={(layer) => {}}\n          eventHandlers={{\n            click: async (e) => {\n              console.log(\"marker clicked\", e.layer.feature);\n              setProperties(e.layer.feature.properties);\n              setLayerH(e.layer.feature);\n              setTooltipVisible(true);\n            },\n          }}\n          key={\"madrid\" + legendValue}\n          data={data}\n        />\n        {tooltipVisible && layerH && (\n          <GeoJSON\n            pathOptions={{ color: \"red\" }}\n            key={layerH.properties.NOMBRE}\n            data={layerH}\n          />\n        )}\n      </MapContainer>\n    </div>\n  );\n};\nexport default App;\n","import \"./App.css\";\nimport { MapContainer, TileLayer, GeoJSON, MapConsumer } from \"react-leaflet\";\nimport data from \"./app_data/neighborhoods_madrid_stats.json\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useEffect, useState, useRef } from \"react\";\n\nconst madridCenter = [40.475, -3.7];\n\nconst useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nconst Simulator = () => {\n  let query = useQuery();\n  const id = query.get(\"id\");\n  const [currentJSON, setCurrentJSON] = useState(data);\n  const currentJSONRef = useRef(null);\n  const mapRef = useRef(null);\n\n  useEffect(() => {\n    if (id) {\n      const fileName = `MaTREEd/app_data/trees_neighbours/T_CODBARRIO_${id}.json`;\n      console.log(fileName);\n      fetch(fileName)\n        .then(res => res.json())\n        .then(data => {\n          setCurrentJSON(data);\n          if (currentJSONRef.current) {\n            const bounds = currentJSONRef.current.getBounds();\n            console.log(bounds);\n            mapRef.current.fitBounds(bounds);\n          }\n        });\n    }\n  }, [id]);\n  return (\n    <div id=\"container\">\n      <div className=\"pageName\">\n        MaTREEd Simulator\n        <Link to=\"/\">\n          <button className=\"blueButton linkButton\">Go to Viewer</button>\n        </Link>\n      </div>\n      <MapContainer\n        id=\"mapContainer\"\n        center={madridCenter}\n        zoom={11}\n        scrollWheelZoom={false}\n      >\n        <MapConsumer>\n          {map => {\n            mapRef.current = map;\n            return (\n              <>\n                <TileLayer\n                  attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                <GeoJSON\n                  ref={currentJSONRef}\n                  onEachFeature={layer => {}}\n                  eventHandlers={{\n                    click: async e => {\n                      console.log(\n                        \"marker clicked\",\n                        e.layer?.feature?.properties?.CODBARRIO\n                      );\n\n                      const CODBARRIO = e.layer?.feature?.properties?.CODBARRIO;\n                      if (!CODBARRIO) {\n                        return;\n                      }\n                      const fileName = `MaTREEd/app_data/trees_neighbours/T_CODBARRIO_${CODBARRIO}.json`;\n\n                      fetch(fileName)\n                        .then(res => res.json())\n                        .then(data => {\n                          setCurrentJSON(data);\n                          if (currentJSONRef.current) {\n                            const bounds = currentJSONRef.current.getBounds();\n                            console.log(bounds);\n                            map.fitBounds(bounds);\n                          }\n                        });\n                    }\n                  }}\n                  key={currentJSON.name}\n                  data={currentJSON}\n                />\n              </>\n            );\n          }}\n        </MapConsumer>\n      </MapContainer>\n    </div>\n  );\n};\nexport default Simulator;\n","import { HashRouter, Route } from \"react-router-dom\";\nimport Viewer from \"./Viewer\";\nimport Simulator from \"./Simulator\";\n\nexport default function App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Route exact path=\"/\" component={Viewer} />\n      <Route path=\"/simulator\" component={Simulator} />\n    </HashRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}