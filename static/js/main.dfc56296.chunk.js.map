{"version":3,"sources":["Viewer.js","Simulator.js","App.js","index.js"],"names":["madridCenter","Tooltip","closeTooltip","style","properties","perc_caducifolio","perc_perennifolio","tree_valid","tree_tot","especie_1_perc","especie_2_perc","especie_3_perc","other_perc","sum_c_stock","sum_c_seq","CODBARRIO","treeData","treeSpecies","carbonInfo","className","map","name","val","to","onClick","App","useState","tooltipVisible","setTooltipVisible","setProperties","layerH","setLayerH","left","id","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","GeoJSON","onEachFeature","layer","eventHandlers","click","e","a","console","log","feature","data","pathOptions","color","NOMBRE","Simulator","URLSearchParams","useLocation","search","get","currentJSON","setCurrentJSON","currentJSONRef","useRef","mapRef","useEffect","fileName","fetch","then","res","json","current","bounds","getBounds","fitBounds","MapConsumer","ref","basename","exact","path","component","Viewer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfc56296.chunk.js","sourcesContent":["import {useState} from 'react';\nimport './App.css';\nimport {MapContainer, TileLayer, GeoJSON} from 'react-leaflet'\nimport data from './app_data/neighborhoods_madrid_stats.json'\nimport {Link} from \"react-router-dom\";\nconst madridCenter = [40.475, -3.70];\n\n\nconst Tooltip = ({closeTooltip, style, properties}) =>{\n  \n  if(!properties){\n    return null\n  }\n  const {perc_caducifolio, perc_perennifolio, tree_valid, tree_tot,\n    especie_1_perc, especie_2_perc, especie_3_perc, other_perc,\n    sum_c_stock, sum_c_seq,\n    CODBARRIO,\n  } = properties;\n\n  const treeData=[\n     ['TOTAL TREE NUMBER',tree_tot],\n     ['VALID TREE',tree_valid+'%'],\n     ['Perc. of PERENNIFOLIO',perc_perennifolio],\n     ['Perc. of CADUCIFOLIO',perc_caducifolio],\n  ]\n\n  const treeSpecies=[\n    ['acero ',especie_1_perc],\n    ['pinus',especie_2_perc],\n    ['betulla',especie_3_perc],\n    ['others',other_perc],\n ]\n\n const carbonInfo=[\n  ['C stock ',sum_c_stock],\n  ['C sequestr.',sum_c_seq],\n]\n  return(\n    <div style={style} className='tooltip'>\n        <div className='singleRow'>\n          <p>TREE DATA</p>\n        </div>\n      {treeData.map(([name,val])=>(\n        <div className='row'>\n          <p>{name}</p>\n          <p>{val}</p>\n        </div>\n      ))}\n        <div className='singleRow'>\n          <p>TREE SPECIES</p>\n        </div>\n        {treeSpecies.map(([name,val])=>(\n        <div className='row'>\n          <p>{name}</p>\n          <p>{val}%</p>\n        </div>\n        ))}\n       <div className='singleRow'>\n          <p>CARBON INFO</p>\n        </div>\n          {carbonInfo.map(([name,val])=>(\n          <div className='row'>\n            <p>{name}</p>\n            <p>{val}%</p>\n          </div>\n      ))}\n    <Link to={`/simulator?id=${CODBARRIO}`}>\n      <button className='blueButton goToSimulator'>View in Simulator</button>\n    </Link>\n    <button className='blueButton closeButton' onClick={closeTooltip}>Close</button>\n    \n    </div>\n  )\n}\n\nconst App = ()=> {\n  const [tooltipVisible, setTooltipVisible] = useState(false)\n  const [properties, setProperties]= useState(null)\n  const [layerH, setLayerH]= useState(null)\n  const left = tooltipVisible?'0px':'-100%';\n  return (\n  <div id='container'>\n    <div className='pageName'>MaTREEd Viewer\n    <Link to=\"/simulator\">\n       <button className='blueButton linkButton'>Go to Simulator</button>\n      </Link>\n    </div>\n     <Tooltip \n     properties={properties}\n     style={{ left: left}}\n     closeTooltip={()=>setTooltipVisible(false)}>\n    </Tooltip>\n\n    <MapContainer id='mapContainer' center={madridCenter} zoom={11} scrollWheelZoom={false}>\n  \n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <GeoJSON \n          onEachFeature={ layer => {}}\n          eventHandlers={{\n            click: async(e) => {\n              console.log('marker clicked', e.layer.feature)\n              setProperties(e.layer.feature.properties)\n              setLayerH(e.layer.feature)\n              setTooltipVisible(true)\n            },\n          }}\n          key={'madrid'} data={data} />\n          {tooltipVisible && layerH && (\n            <GeoJSON \n            pathOptions={{color:'red'}}\n            key={layerH.properties.NOMBRE} data={layerH} />\n          )}\n    </MapContainer>\n  </div>\n  )}\nexport default App;\n","import './App.css';\nimport {MapContainer, TileLayer, GeoJSON, MapConsumer} from 'react-leaflet'\nimport data from './app_data/neighborhoods_madrid_stats.json'\nimport {Link, useLocation} from \"react-router-dom\";\nimport { useEffect, useState, useRef } from 'react';\n\nconst madridCenter = [40.475, -3.70];\n\nconst useQuery= ()=> {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst Simulator = ()=> {\n  let query = useQuery();\n  const id = query.get(\"id\")\n  const [currentJSON, setCurrentJSON] = useState(data);\n  const currentJSONRef = useRef(null);\n  const mapRef = useRef(null);\n\n  useEffect(()=>{\n  if(id){\n              const fileName = `MaTREEd/app_data/trees_neighbours/T_CODBARRIO_${id}.json`;\n              console.log(fileName)\n              fetch(fileName)\n                .then(res=>res.json())\n                .then(data=>{\n                  setCurrentJSON(data)\n                  if(currentJSONRef.current){\n                    const bounds = currentJSONRef.current.getBounds()\n                    console.log(bounds)\n                    mapRef.current.fitBounds(bounds)\n                  }\n                });\n  }\n},[id])\n  return (\n  <div id='container'>\n    <div className='pageName'>MaTREEd Simulator\n    <Link to=\"/\">\n       <button className='blueButton linkButton'>Go to Viewer</button>\n      </Link>\n    </div>\n    <MapContainer id='mapContainer' center={madridCenter} zoom={11} scrollWheelZoom={false}>\n    <MapConsumer>\n        {(map) => {\n          mapRef.current=map;\n      return(\n         <>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <GeoJSON \n          ref={currentJSONRef}\n          onEachFeature={ layer => {}}\n          eventHandlers={{\n            click: async(e) => {\n              console.log('marker clicked', e.layer?.feature?.properties?.CODBARRIO)\n\n              const CODBARRIO = e.layer?.feature?.properties?.CODBARRIO;\n              if(!CODBARRIO){return}\n              const fileName = `MaTREEd/app_data/trees_neighbours/T_CODBARRIO_${CODBARRIO}.json`;\n\n              fetch(fileName)\n                .then(res=>res.json())\n                .then(data=>{\n                  setCurrentJSON(data)\n                  if(currentJSONRef.current){\n                    const bounds = currentJSONRef.current.getBounds()\n                    console.log(bounds)\n                    map.fitBounds(bounds)\n                  }\n                });\n            },\n          }}\n          key={currentJSON.name} data={currentJSON} />\n          </>\n        )}}\n      </MapConsumer>\n    </MapContainer>\n  </div>\n  )\n  }\nexport default Simulator;\n","import {\n  HashRouter,\n  Route,\n} from \"react-router-dom\";\nimport Viewer from './Viewer'\nimport Simulator from './Simulator'\n\nexport default function App() {\n  return (\n    <HashRouter basename='/'>\n     <Route exact path=\"/\" component={Viewer} />\n     <Route path=\"/simulator\" component={Simulator} />\n   </HashRouter>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}